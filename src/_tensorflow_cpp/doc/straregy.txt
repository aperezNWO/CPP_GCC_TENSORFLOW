/////////////////////////////////////////////
// STRATEGY
/////////////////////////////////////////////

-- [_] Machine Learning / Artificial Intelligence / Neural Networks example.

	-- [_] https://chat.qwen.ai/c/7d46d2ce-70a5-4c9f-ba4c-d7ce475527ed.

	-- [_] Play basic games / algorhtimh / challenges;  against itself.
	
        -- [_] Sudoku (logic problems).
        
        -- [_] Hanoi (viable but not optimal).
			
		-- [_] Shortest Path.
        
        -- [_] Tetris.
        
        -- [_] Chess.
        
        -- [_] TIC-TAC-TOE (ok).

	-- [_] TIC-TAC-TOE GAME.
	
		-- [_] SLC PROJECT 001 - Role=Developer
	
			-- [_] https://chat.qwen.ai/c/6d3008ce-c294-42dd-8085-6bd3e877a8e7
	
		-- [x] Create standalone demo 
		
			-- [x] test_tic_tac_toe_exe.cpp (softmax and relu are implicit).
			
			-- [_] Other Options.
			
				-- [_] .
		
				-- [_] .

				-- [_] .

			-- [_] TENSORFLOW.
			
				-- [_] DJANGO_DEMO_LOCAL.
			
		-- [_] Integrate isolated demo with Tensorflow C++ DLL.	
				
			-- [_] Generic Switch with current method.	

/////////////////////////////////////////////
// QUESTIONS
/////////////////////////////////////////////

-- [_] https://chat.qwen.ai/c/283bf0b9-9100-4e0f-a617-37980c14df1f

Hi Qwen. I have a full stack project with the following features

  - Angular Frontend.
  - .NET    Backend
  - Codesandbox hosted backend (node.js, python, springboot)
  - c++ compiled dll exposed through .NET backend via dllimport.
  - MS SQL Server database hosted remotely.
  
The program has the following group of components


1. Miscelaneous

    1.1  OCR demo using the camera or a drawing pad
         - Library : Tessseract for c++ via .net core backend dllimport.
		 - Library : Tesseract for javascript via node.js backend.
    1.2  Shape recognition using the camera or a drawing path
         - Library : Opencv for c++ via .net core backend dllimport.
         - Library : Opencv for Angular / Typescript
    1.3  Math demo using math.js library.
	1.4  Collision demo using html  canvas.
	1.5  Fractal demo using Opencv for c++ via .net core backend dllimport.
	1.6. Chat demo using socket.io  

2. file format demos

    2.1 Form which queries a remote database, shows the result in a grid, imports to xls format.
    2.2 Form which queries a remote database, shows the result in a grid, imports to csv format.
    2.3 pdf export generation sample using iTextSharp.
    2.4 Chart demo using chart.js library ( pie chart , bar chart).

3. Algorithms

    3.1 Dijkstra demo which put random points and connnections and search the shorstes distance from
        one defined point to other
        Backend : Springboot, c++, C#.
    3.2 Regular Expression demo. Search into a xml document via regex tag.
        Backend : C++ and c#
    3.3 Sort Benchmar,.  Sorts a shuffled ist of 25 sequential numbers
        Backend : C++ and c#
      
4. Games

    3.1  Hanoi Towers challenge 2d using canvas html and observables
    3.2  Hanoi Towers challenge 3d using TWEEN library
    3.3  Sudoku autogenerated and ajuto solved
         backend: c++ and node.js
    3.4  Tic tac Toe with Typescript engine, playing user against machine.
    3.5  Tic tac Toe a.i. using one the following resources 
         
		 - Tensorflow
         - c++ neural network from scratch.

 My question is if you please can list a pensum of machine learning, deep learning and tensorflow indicating
 which component of thie fullstack may apply or if better to add one (i.e. chess a.i.)
          
/////////////////////////////////////////////
	
